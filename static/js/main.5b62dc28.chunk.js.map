{"version":3,"sources":["components/DateFrequencyChart.js","App.js","index.js"],"names":["DateFrequencyChart","tokenID","locationID","LOCATION_API","fetchData","useState","startDate","setStartDate","endDate","setEndDate","dateRange","setDateRange","alerts","setAlerts","data","setData","ALERTS_API","formatUnixTime","unixTime","dateObj","Date","getTime","getTimezoneOffset","toISOString","slice","useEffect","headers","Authorization","then","range","dateMove","strDate","push","setDate","getDate","generateRange","frequencyObj","reduce","a","b","eventsArr","i","length","timestamp","countEventsByDate","labels","Object","keys","datasets","label","values","backgroundColor","className","htmlFor","type","value","onChange","e","target","App","setTokenID","setLocationID","BASE_URL","TOKEN_API","api","fetch","response","json","getTokenID","access_token","getLocationID","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b62dc28.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport './DateFrequencyChart.css';\n\nconst DateFrequencyChart = ({ tokenID, locationID, LOCATION_API, fetchData }) => {\n\tconst [startDate, setStartDate] = useState('2020-05-01');\n\tconst [endDate, setEndDate] = useState('2020-05-10');\n\tconst [dateRange, setDateRange] = useState([]);\n\tconst [alerts, setAlerts] = useState([]);\n\tconst [data, setData] = useState({});\n\n\tconst selector = '[ADAM]';\n\tconst ALERTS_API = `${LOCATION_API}/${locationID}/alerts?start_date=${startDate}&end_date=${endDate}&selector=${selector}`;\n\n\t// generateRange accepts 2 dates (yyyy-mm-dd)\n\t// and returns an array of dates between the 2 input dates.\n\tconst generateRange = (startDate, endDate) => {\n\t\tconst range = [];\n\t\tconst dateMove = new Date(startDate);\n\t\tlet strDate = startDate;\n\n\t\twhile (strDate < endDate) {\n\t\t    strDate = dateMove.toISOString().slice(0,10);\n\t\t    range.push(strDate);\n\t\t    dateMove.setDate(dateMove.getDate()+1);\n\t\t};\n\n\t\treturn range;\n\t};\n\n\t// convertArrToObj accepts an array and returns an object\n\t// which its keys are elements in the array, its values are set to 0.\n\tconst convertArrToObj = arr => arr.reduce((a, b) => (a[b] = 0, a), {});\n\n\t// formarUnixTime formats a unix time into yyyy-mm-dd.\n\tconst formatUnixTime = unixTime => {\n\t\tconst dateObj = new Date(unixTime * 1000);\n\t\tconst localTime = new Date(dateObj.getTime() - (dateObj.getTimezoneOffset() * 60000)).toISOString();\n\n\t\treturn localTime.slice(0, 10);\n\t};\n\n\t// countEventsByDate counts the number of events per day.\n\tconst countEventsByDate = (eventsArr, frequencyObj) => {\n\t\tfor (let i = 0; i < eventsArr.length; i++) {\n\t\t\tconst key = formatUnixTime(eventsArr[i].timestamp);\n\n\t\t\tfrequencyObj[key]++;\n\t\t}\n\n\t\treturn frequencyObj;\n\t};\n\n\t// fetch events data.\n\tuseEffect(() => {\n\t\tif (locationID) {\n\t\t\tfetchData(ALERTS_API, {headers: {Authorization: `Bearer ${tokenID}`}})\n\t\t\t\t.then(data => setAlerts(data.data));\t\t\n\t\t}\n\t}, [ALERTS_API]);\n\n\t// generate date range.\n\tuseEffect(() => {\n\t\tconst range = startDate ? generateRange(startDate, endDate) : [];\n\n\t\tsetDateRange(range);\n\t}, [startDate, endDate]);\n\n\t// count the number of events per day and set data that will be passed into bar chart.\n\tuseEffect(() => {\n\t\tlet frequencyObj = convertArrToObj(dateRange);\n\t\tfrequencyObj = countEventsByDate(alerts, frequencyObj);\n\n\t\tsetData({\n\t\t\tlabels: Object.keys(frequencyObj),\n\t\t\tdatasets: [\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of events',\n\t\t\t\t\tdata: Object.values(frequencyObj),\n\t\t\t\t\tbackgroundColor: 'rgba(32, 121, 199, 0.2)'\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t}, [alerts]);\n\n\tconst handleStartDateChange = e => setStartDate(e.target.value);\n\n\tconst handleEndDateChange = e => setEndDate(e.target.value);\n\n\treturn (\n\t\t<div className='DateFrequencyChart'>\n\t\t\t<div className='datepicker'>\n\t\t\t\t<label htmlFor=\"startDate\">From</label><br />\n\t\t\t\t<input type='date' value={startDate} onChange={handleStartDateChange} /><br />\n\t\t\t</div>\n\n\t\t\t<div className='datepicker'>\n\t\t\t\t<label htmlFor=\"endDate\">To</label><br />\n\t\t\t\t<input type='date' value={endDate} onChange={handleEndDateChange} /><br />\t\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className='Bar'>\n\t\t\t\t<Bar data={data} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DateFrequencyChart;","import React, { useState, useEffect } from 'react';\nimport DateFrequencyChart from './components/DateFrequencyChart';\nimport './App.css';\n\nconst App = () => {\n\tconst [tokenID, setTokenID] = useState('');\n\tconst [locationID, setLocationID] = useState('');\n\n\tconst CLIENT_ID = '20AF566F';\n\tconst API_KEY = 'Vu112d0Wmg99bx/ax02bUlNipBEOv3uIPrf73ZNJ8NgvN0qlnhpqYfVP80eXhX2X';\n\tconst BASE_URL = 'https://appsrv.fastsensor.us:8890/';\n\tconst TOKEN_API = `${BASE_URL}oauth2/token?client_id=${CLIENT_ID}&api_key=${API_KEY}`;\n\tconst LOCATION_API = `${BASE_URL}v1/locations`;\n\n\tconst fetchData = async (api, headers) => {\n\t\tconst response = await fetch(api, headers);\n\t\treturn await response.json();\n\t};\n\n\tconst getTokenID = async () => {\n\t\tconst data = await fetchData(TOKEN_API);\n\n\t\tsetTokenID(data.access_token);\n\t};\n\n\tconst getLocationID = async () => {\n\t\tconst data = await (tokenID ? fetchData(LOCATION_API, {headers: {Authorization: `Bearer ${tokenID}`}}) : null);\n\n\t\tsetLocationID(data ? data.data[0].id : '');\n\t};\n\n\tuseEffect(() => {\n\t\tgetTokenID();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetLocationID();\n\t}, [tokenID]);\n\n    return (\n    \t<div className=\"App\">\n        \t<DateFrequencyChart tokenID={tokenID} locationID={locationID} LOCATION_API={LOCATION_API} fetchData={fetchData} />\n    \t</div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}